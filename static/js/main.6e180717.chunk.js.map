{"version":3,"sources":["app.service.js","Sankey.js","Search.js","Header.js","App.js","serviceWorker.js","index.js","images/help.png","images/error.png"],"names":["baseUrl","AppService","nodeName","superagent","get","then","res","JSON","parse","text","paths","previous","nodes","length","next","Error","node","usedNames","Set","map","p","name","filter","sort","a","b","count","n","has","this","getPaths","slice","stripCycleSuffix","transformPaths","query","nodeIds","useStyles","makeStyles","root","width","height","display","alignItems","justifyContent","isHovering","cursor","Sankey","data","setNodeName","theme","useTheme","useState","setIsHovering","classes","className","classNames","chartType","loader","CircularProgress","color","size","options","sankey","interactivity","colors","palette","nodePadding","label","fontSize","bold","link","colorMode","fillOpacity","chartEvents","eventName","callback","selection","chartWrapper","getChart","getSelection","google","chart","visualization","events","addListener","e","CssTextField","withStyles","marginLeft","backgroundColor","fade","border","TextField","Search","React","open","setOpen","setOptions","loading","useEffect","active","getResults","results","catch","err","console","log","Autocomplete","id","style","onOpen","onClose","disableClearable","blurOnSelect","clearOnBlur","freeSolo","value","onChange","event","selectedNodeName","renderInput","params","placeholder","variant","InputProps","endAdornment","Fragment","grow","flexGrow","menuButton","marginRight","spacing","title","breakpoints","up","helpImage","maxWidth","paper","padding","disclaimer","marginTop","Header","isHelpModalOpen","setIsHelpModalOpen","AppBar","position","Toolbar","Typography","noWrap","IconButton","aria-label","aria-haspopup","onClick","Dialog","aria-labelledby","aria-describedby","src","alt","gutterBottom","createMuiTheme","primary","main","StyledMain","styled","StyledLoading","div","StyledError","StyledErrorImage","img","App","setData","error","setError","isLoading","setIsLoading","getDataForNode","response","message","finally","ThemeProvider","errorImage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6e180717.chunk.js","sourcesContent":["import superagent from 'superagent'\n\nconst baseUrl = 'https://10.110.101.254/nodes'\n\nconst cycleSuffix = ' '\n\nfunction stripCycleSuffix(nodeName) {\n  return nodeName[nodeName.length - 1] === cycleSuffix ? nodeName.slice(0, nodeName.length - 1) : nodeName\n}\n\nfunction addCycleSuffix(nodeName) {\n  return nodeName + cycleSuffix\n}\n\nclass AppService {\n  // placeholder\n  static getPaths(nodeName) {\n    return superagent\n      .get(`${baseUrl}/${nodeName}/paths`)\n      .then(res => JSON.parse(res.text))\n  }\n\n  static transformPaths(paths) {\n    if (paths.previous.nodes.length === 0 && paths.next.nodes.length === 0) {\n      throw new Error('No paths found.')\n    }\n    const transformed = [\n      ['From', 'To', 'Count']\n    ]\n    const node = paths.node\n    const usedNames = new Set(paths.previous.nodes.map(p => p.name))\n    const previous = paths.previous.nodes.filter(p => p.name !== node.name).sort((a, b) => b.count - a.count).map(p => (\n      [p.name, node.name, p.count]\n    ))\n    const next = paths.next.nodes.filter(n => n.name !== node.name).sort((a, b) => b.count - a.count).map(n => (\n      [node.name, usedNames.has(n.name) ? addCycleSuffix(n.name) : n.name, n.count]\n    ))\n    return [...transformed, ...previous, ...next]\n  }\n\n  static getDataForNode(nodeName) {\n    return this.getPaths(stripCycleSuffix(nodeName))\n      .then(paths => this.transformPaths(paths))\n  }\n\n  static getResults(query) {\n    return superagent\n      .get(`${baseUrl}/list?limit=1000`)\n      .then(res => JSON.parse(res.text).nodeIds)\n  }\n}\n\nexport default AppService\n","import React, {useState} from 'react';\nimport classNames from 'classnames'\nimport Chart from \"react-google-charts\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  isHovering: {\n    cursor: 'pointer'\n  },\n}))\n\nfunction Sankey({data, nodeName, setNodeName}) {\n  const theme = useTheme();\n  const [isHovering, setIsHovering] = useState(false)\n  const classes = useStyles()\n\n  return(\n    <div className={classNames(\n      classes.root,\n      {\n        [classes.isHovering]: isHovering,\n      }\n    )}>\n      <Chart\n        width={'100%'}\n        height={'100%'}\n        chartType=\"Sankey\"\n        loader={(\n          <CircularProgress color=\"primary\" size={100} />\n        )}\n        data={data}\n        options={{\n          sankey: {\n            node: {\n              width: 100,\n              interactivity: true,\n              colors: theme.palette.colors,\n              nodePadding: 16,\n              label: {\n                fontSize: 16,\n                bold: true,\n              }\n            },\n            link: {\n              colors: theme.palette.colors,\n              colorMode: 'gradient',\n              fillOpacity: 0.9,\n            }\n          }\n        }}\n        chartEvents={[\n          {\n            eventName: 'select',\n            callback: ({ chartWrapper }) => {\n              const chart = chartWrapper.getChart()\n              const selection = chart.getSelection()\n              if (selection.length === 1) {\n                const [selectedItem] = selection\n                const {name} = selectedItem\n                setNodeName(name)\n              }\n            },\n          },\n          {\n            eventName: \"ready\",\n            callback: ({ chartWrapper, google }) => {\n              const chart = chartWrapper.getChart();\n              google.visualization.events.addListener(\n                chart,\n                \"onmouseover\",\n                e => {\n                  const {name} = e\n                  if (name && name !== nodeName) {\n                    setIsHovering(true)\n                  }\n                }\n              );\n              google.visualization.events.addListener(\n                chart,\n                \"onmouseout\",\n                () => {\n                  setIsHovering(false)\n                }\n              );\n            }\n          }\n        ]}\n      />\n    </div>\n  )\n}\n\nexport default Sankey\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles, fade } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport AppService from './app.service';\n\nconst CssTextField = withStyles({\n  root: {\n    '& .MuiOutlinedInput-root': {\n      color: 'inherit',\n      marginLeft: '1.5rem',\n      backgroundColor: fade('#fff', 0.15),\n      '&:hover': {\n        backgroundColor: fade('#fff', 0.25),\n      },\n      '& fieldset': {\n        border: 0,\n      },\n    },\n  },\n})(TextField);\n\nfunction Search({setNodeName}) {\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = options.length === 0;\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    AppService.getResults()\n      .then(results => {\n        if (active) {\n          setOptions(results)\n        }\n      })\n      .catch(err => {\n        console.log(err)\n      })\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  return (\n    <Autocomplete\n      id=\"asynchronous-demo\"\n      style={{ width: 300 }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      options={options}\n      loading={loading}\n      disableClearable\n      blurOnSelect\n      clearOnBlur\n      freeSolo\n      value=\"\"\n      size=\"small\"\n      onChange={(event, selectedNodeName) => {\n        setNodeName(selectedNodeName)\n      }}\n      renderInput={(params) => (\n        <CssTextField\n          {...params}\n          placeholder=\"Find a node…\"\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : <SearchIcon />}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n\nexport default Search\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Help from '@material-ui/icons/Help';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport helpImage from './images/help.png'\nimport Search from './Search'\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  helpImage: {\n    maxWidth: '100%',\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  disclaimer: {\n    marginTop: theme.spacing(2),\n  }\n}));\n\nexport default function Header({setNodeName}) {\n  const [isHelpModalOpen, setIsHelpModalOpen] = React.useState(false)\n  const classes = useStyles();\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            OncoEMR User Paths\n          </Typography>\n          <Search setNodeName={setNodeName} />\n          <div className={classes.grow} />\n            <IconButton\n              aria-label=\"What is this?\"\n              aria-haspopup=\"true\"\n              onClick={() => setIsHelpModalOpen(true)}\n              color=\"inherit\"\n            >\n              <Help />\n            </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Dialog\n        open={isHelpModalOpen}\n        onClose={() => setIsHelpModalOpen(false)}\n        aria-labelledby=\"What is this?\"\n        aria-describedby=\"Learn how to use the app.\"\n      >\n        <img src={helpImage} alt=\"Chart\" className={classes.helpImage} />\n        <div className={classes.paper}>\n          <Typography variant=\"h6\" gutterBottom>\n            How to Use and Interpret\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            This chart shows the flow of users through OncoEMR. Each node represents a page or a modal within OncoEMR. The lines represent users’ movement from one page/modal to another. The thickness of the lines indicate how frequent that movement occurs; the thicker the line the more frequent the movement.\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            Clicking on a node will show you the flow of users from it.\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            You can use the search function to locate and display nodes of interest.\n          </Typography>\n          <div className={classes.disclaimer}>\n            <Typography variant=\"h6\" gutterBottom>\n              Disclaimer\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n              This application is a proof-of-concept. The data shown does not represent all users’ activity in OncoEMR.\n            </Typography>\n          </div>\n        </div>\n      </Dialog>\n    </>\n  );\n}","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport AppService from './app.service'\nimport './App.css'\nimport Sankey from './Sankey'\nimport Header from './Header'\nimport errorImage from './images/error.png';\n\nconst colors = [\n  '#5051DB',\n  '#05bfe0',\n  '#1463b0',\n  '#33d1bf',\n  '#0a7387',\n  '#33f5f5',\n]\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#5051DB',\n    },\n    colors,\n  },\n});\n\nconst StyledMain = styled.main`\n  padding: 1rem;\n  padding-top: calc(4rem + 1rem);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  position: relative;\n`\n\nconst StyledLoading = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.6);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledError = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 50%;\n  text-align: center;\n`\n\nconst StyledErrorImage = styled.img`\n  max-width: 40%;\n  margin-bottom: 1rem;\n`\n\nfunction App() {\n  const [nodeName, setNodeName] = useState('Visit List')\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(() => {\n    setIsLoading(true)\n    AppService\n      .getDataForNode(nodeName)\n      .then(response => {\n        setData(response)\n        setError(null)\n      })\n      .catch(err => {\n        console.log(error)\n        setError(err.message)\n      })\n      .finally(() => {\n        setIsLoading(false)\n      })\n  }, [nodeName])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Header setNodeName={setNodeName} />\n      <StyledMain>\n        {data && !error && (\n          <>\n            <Sankey data={data} nodeName={nodeName} setNodeName={setNodeName} />\n          </>\n        )}\n        {error && (\n          <StyledError>\n            <StyledErrorImage src={errorImage} alt=\"error\" />\n            <Typography variant=\"h6\">\n              {error}\n            </Typography>\n          </StyledError>\n        )}\n        {isLoading && (\n          <StyledLoading>\n            <CircularProgress color=\"primary\" size={100} />\n          </StyledLoading>\n        )}\n      </StyledMain>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/help.c506c2ac.png\";","module.exports = __webpack_public_path__ + \"static/media/error.74a8c9ef.png\";"],"sourceRoot":""}